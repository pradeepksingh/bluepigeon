package org.bluepigeon.admin.model;
// Generated 27 Mar, 2017 5:55:47 PM by Hibernate Tools 4.0.0

import java.util.HashSet;
import java.util.Set;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import static javax.persistence.GenerationType.IDENTITY;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.OneToMany;
import javax.persistence.Table;

/**
 * City generated by hbm2java
 */
@Entity
@Table(name = "city", catalog = "blue_pigeon")
public class City implements java.io.Serializable {

	private Integer id;
	private State state;
	private String name;
	private Byte status;
	private Set<BuilderProject> builderProjects = new HashSet<BuilderProject>(0);
	private Set<Locality> localities = new HashSet<Locality>(0);
	private Set<BuilderLead> builderLeads = new HashSet<BuilderLead>(0);

	public City() {
	}

	public City(State state, String name, Byte status, Set<BuilderProject> builderProjects, Set<Locality> localities,
			Set<BuilderLead> builderLeads) {
		this.state = state;
		this.name = name;
		this.status = status;
		this.builderProjects = builderProjects;
		this.localities = localities;
		this.builderLeads = builderLeads;
	}

	@Id
	@GeneratedValue(strategy = IDENTITY)

	@Column(name = "id", unique = true, nullable = false)
	public Integer getId() {
		return this.id;
	}

	public void setId(Integer id) {
		this.id = id;
	}

	@ManyToOne(fetch = FetchType.EAGER)
	@JoinColumn(name = "state_id")
	public State getState() {
		return this.state;
	}

	public void setState(State state) {
		this.state = state;
	}

	@Column(name = "name", length = 200)
	public String getName() {
		return this.name;
	}

	public void setName(String name) {
		this.name = name;
	}

	@Column(name = "status")
	public Byte getStatus() {
		return this.status;
	}

	public void setStatus(Byte status) {
		this.status = status;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "city")
	public Set<BuilderProject> getBuilderProjects() {
		return this.builderProjects;
	}

	public void setBuilderProjects(Set<BuilderProject> builderProjects) {
		this.builderProjects = builderProjects;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "city")
	public Set<Locality> getLocalities() {
		return this.localities;
	}

	public void setLocalities(Set<Locality> localities) {
		this.localities = localities;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "city")
	public Set<BuilderLead> getBuilderLeads() {
		return this.builderLeads;
	}

	public void setBuilderLeads(Set<BuilderLead> builderLeads) {
		this.builderLeads = builderLeads;
	}

}
