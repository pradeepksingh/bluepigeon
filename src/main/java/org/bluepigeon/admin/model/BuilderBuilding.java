package org.bluepigeon.admin.model;
// Generated 27 Mar, 2017 5:55:47 PM by Hibernate Tools 4.0.0

import java.util.Date;
import java.util.HashSet;
import java.util.Set;

import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;

import static javax.persistence.GenerationType.IDENTITY;

import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.OneToMany;
import javax.persistence.Table;
import javax.persistence.Temporal;
import javax.persistence.TemporalType;

/**
 * BuilderBuilding generated by hbm2java
 */
@Entity
@Table(name = "builder_building", catalog = "blue_pigeon")
public class BuilderBuilding implements java.io.Serializable {

	private Integer id;
	private AdminUser adminUser;
	private BuilderBuildingStatus builderBuildingStatus;
	private BuilderProject builderProject;
	private String name;
	private Integer totalFloor;
	private Date launchDate;
	private Date possessionDate;
	private Double totalInventory;
	private Double inventorySold;
	private Double revenue;
	private Double completionStatus = 0.0;
	private Double amenityWeightage = 0.0;
	private Double floorWeightage = 0.0;
	private Double weightage = 0.0;
	private Byte status;
	private String image = "";
	private Set<BuilderFloor> builderFloors = new HashSet<BuilderFloor>(0);

	public BuilderBuilding() {
	}

	public BuilderBuilding(AdminUser adminUser, BuilderBuildingStatus builderBuildingStatus, Double completionStatus,
			BuilderProject builderProject, String name, Integer totalFloor, Date launchDate, Date possessionDate,
			Double totalInventory, Double inventorySold, Double revenue, Byte status, Set<BuilderFloor> builderFloors,
			Double amenityWeightage, Double floorWeightage, Double weightage,String image) {
		this.adminUser = adminUser;
		this.builderBuildingStatus = builderBuildingStatus;
		this.builderProject = builderProject;
		this.name = name;
		this.totalFloor = totalFloor;
		this.launchDate = launchDate;
		this.possessionDate = possessionDate;
		this.totalInventory = totalInventory;
		this.inventorySold = inventorySold;
		this.revenue = revenue;
		this.status = status;
		this.completionStatus = completionStatus;
		this.builderFloors = builderFloors;
		this.amenityWeightage = amenityWeightage;
		this.floorWeightage = floorWeightage;
		this.weightage = weightage;
		this.image = image;
	}

	@Id
	@GeneratedValue(strategy = IDENTITY)

	@Column(name = "id", unique = true, nullable = false)
	public Integer getId() {
		return this.id;
	}

	public void setId(Integer id) {
		this.id = id;
	}

	@ManyToOne(fetch = FetchType.EAGER)
	@JoinColumn(name = "emp_id")
	public AdminUser getAdminUser() {
		return this.adminUser;
	}

	public void setAdminUser(AdminUser adminUser) {
		this.adminUser = adminUser;
	}

	@ManyToOne(fetch = FetchType.EAGER)
	@JoinColumn(name = "status_id")
	public BuilderBuildingStatus getBuilderBuildingStatus() {
		return this.builderBuildingStatus;
	}

	public void setBuilderBuildingStatus(BuilderBuildingStatus builderBuildingStatus) {
		this.builderBuildingStatus = builderBuildingStatus;
	}

	@ManyToOne(fetch = FetchType.EAGER)
	@JoinColumn(name = "project_id")
	public BuilderProject getBuilderProject() {
		return this.builderProject;
	}

	public void setBuilderProject(BuilderProject builderProject) {
		this.builderProject = builderProject;
	}

	@Column(name = "name", length = 128)
	public String getName() {
		return this.name;
	}

	public void setName(String name) {
		this.name = name;
	}

	@Column(name = "total_floor")
	public Integer getTotalFloor() {
		return this.totalFloor;
	}

	public void setTotalFloor(Integer totalFloor) {
		this.totalFloor = totalFloor;
	}

	@Temporal(TemporalType.DATE)
	@Column(name = "launch_date", length = 10)
	public Date getLaunchDate() {
		return this.launchDate;
	}

	public void setLaunchDate(Date launchDate) {
		this.launchDate = launchDate;
	}

	@Temporal(TemporalType.DATE)
	@Column(name = "possession_date", length = 10)
	public Date getPossessionDate() {
		return this.possessionDate;
	}

	public void setPossessionDate(Date possessionDate) {
		this.possessionDate = possessionDate;
	}

	@Column(name = "total_inventory", precision = 22, scale = 0)
	public Double getTotalInventory() {
		return this.totalInventory;
	}

	public void setTotalInventory(Double totalInventory) {
		this.totalInventory = totalInventory;
	}

	@Column(name = "inventory_sold", precision = 22, scale = 0)
	public Double getInventorySold() {
		return this.inventorySold;
	}

	public void setInventorySold(Double inventorySold) {
		this.inventorySold = inventorySold;
	}

	@Column(name = "revenue", precision = 22, scale = 0)
	public Double getRevenue() {
		return this.revenue;
	}

	public void setRevenue(Double revenue) {
		this.revenue = revenue;
	}

	@Column(name = "status")
	public Byte getStatus() {
		return this.status;
	}

	public void setStatus(Byte status) {
		this.status = status;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "builderBuilding")
	public Set<BuilderFloor> getBuilderFloors() {
		return this.builderFloors;
	}

	public void setBuilderFloors(Set<BuilderFloor> builderFloors) {
		this.builderFloors = builderFloors;
	}
	
	@Column(name = "completion_status", precision = 22, scale = 0)
	public Double getCompletionStatus() {
		return this.completionStatus;
	}

	public void setCompletionStatus(Double completionStatus) {
		this.completionStatus = completionStatus;
	}
	@Column(name = "amenity_weightage", precision = 22, scale = 0)
	public Double getAmenityWeightage() {
		return amenityWeightage;
	}

	public void setAmenityWeightage(Double amenityWeightage) {
		this.amenityWeightage = amenityWeightage;
	}
	@Column(name = "floor_weightage", precision = 22, scale = 0)
	public Double getFloorWeightage() {
		return floorWeightage;
	}

	public void setFloorWeightage(Double floorWeightage) {
		this.floorWeightage = floorWeightage;
	}
	@Column(name = "weightage", precision = 22, scale = 0)
	public Double getWeightage() {
		return weightage;
	}

	public void setWeightage(Double weightage) {
		this.weightage = weightage;
	}
	@Column(name = "image")
	public String getImage() {
		return image;
	}

	public void setImage(String image) {
		this.image = image;
	}
}
